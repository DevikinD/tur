diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index c3da44e..b5fc6b9 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -546,6 +546,7 @@ static NTSTATUS open_fsync( enum fsync_type type, HANDLE *handle,
     return ret;
 }
 
+#if defined __linux__ && !defined __ANDROID__
 void fsync_init(void)
 {
     struct stat st;
@@ -583,6 +584,7 @@ void fsync_init(void)
             ERR("Failed to initialize shared memory: %s\n", strerror( errno ));
         exit(1);
     }
+#endif
 
     current_pid = GetCurrentProcessId();
     assert(current_pid);
diff --git a/server/fsync.c b/server/fsync.c
index dc50aa0..550c3a5 100644
--- a/server/fsync.c
+++ b/server/fsync.c
@@ -82,13 +82,16 @@ static uint32_t shm_idx_free_search_start_hint;
 
 #define BITS_IN_FREE_MAP_WORD (8 * sizeof(*shm_idx_free_map))
 
+#if defined __linux__ && !defined __ANDROID__
 static void shm_cleanup(void)
 {
     close( shm_fd );
     if (shm_unlink( shm_name ) == -1)
         perror( "shm_unlink" );
 }
+#endif
 
+#if defined __linux__ && !defined __ANDROID__
 void fsync_init(void)
 {
     struct stat st;
@@ -126,6 +129,7 @@ void fsync_init(void)
 
     atexit( shm_cleanup );
 }
+#endif
 
 static struct list mutex_list = LIST_INIT(mutex_list);
 
